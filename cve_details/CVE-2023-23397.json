{
    "Modified": "2023-03-20T14:00:00",
    "Published": "2023-03-14T17:15:00",
    "access": {},
    "assigner": "secure@microsoft.com",
    "capec": [
        {
            "id": "94",
            "name": "Man in the Middle Attack",
            "prerequisites": "There are two components communicating with each other. An attacker is able to identify the nature and mechanism of communication between the two target components. An attacker can eavesdrop on the communication between the target components. Strong mutual authentication is not used between the two target components yielding opportunity for attacker interposition. The communication occurs in clear (not encrypted) or with insufficient and spoofable encryption.",
            "related_weakness": [
                "287",
                "290",
                "294",
                "300",
                "593",
                "724"
            ],
            "solutions": "Get your Public Key signed by a Certificate Authority Encrypt your communication using cryptography (SSL,...) Use Strong mutual authentication to always fully authenticate both ends of any communications channel. Exchange public keys using a secure channel",
            "summary": "This type of attack targets the communication between two components (typically client and server). The attacker places himself in the communication channel between the two components. Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first goes to the attacker, who has the opportunity to observe or alter it, and it is then passed on to the other component as if it was never observed. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for Man-in-the-Middle attacks yields an implicit lack of trust in communication or identify between two components. MITM attacks differ from sniffing attacks since they often modify the communications prior to delivering it to the intended recipient. These attacks also differ from interception attacks since they may forward the sender's original unmodified data, after copying it, instead of keeping it for themselves."
        },
        {
            "id": "102",
            "name": "Session Sidejacking",
            "prerequisites": "An attacker and the victim are both using the same WiFi network. The victim has an active session with a target system. The victim is not using a secure channel to communicate with the target system (e.g. SSL, VPN, etc.) The victim initiated communication with a target system that requires transfer of the session token or the target application uses AJAX and thereby periodically \"rings home\" asynchronously using the session token",
            "related_weakness": [
                "294",
                "319",
                "522",
                "523",
                "614"
            ],
            "solutions": "Make sure that HTTPS is used to communicate with the target system. Alternatively, use VPN if possible. It is important to ensure that all communication between the client and the server happens via an encrypted secure channel. Modify the session token with each transmission and protect it with cryptography. Add the idea of request sequencing that gives the server an ability to detect replay attacks.",
            "summary": "Session sidejacking takes advantage of an unencrypted communication channel between a victim and target system. The attacker sniffs traffic on a network looking for session tokens in unencrypted traffic. Once a session token is captured, the attacker performs malicious actions by using the stolen token with the targeted application to impersonate the victim. This attack is a specific method of session hijacking, which is exploiting a valid session token to gain unauthorized access to a target system or information. Other methods to perform a session hijacking are session fixation, cross-site scripting, or compromising a user or server machine and stealing the session token."
        },
        {
            "id": "60",
            "name": "Reusing Session IDs (aka Session Replay)",
            "prerequisites": "The target host uses session IDs to keep track of the users. Session IDs are used to control access to resources. The session IDs used by the target host are not well protected from session theft.",
            "related_weakness": [
                "200",
                "285",
                "290",
                "294",
                "346",
                "384",
                "488",
                "539",
                "664",
                "732"
            ],
            "solutions": "Always invalidate a session ID after the user logout. Setup a session time out for the session IDs. Protect the communication between the client and server. For instance it is best practice to use SSL to mitigate man in the middle attack. Do not code send session ID with GET method, otherwise the session ID will be copied to the URL. In general avoid writing session IDs in the URLs. URLs can get logged in log files, which are vulnerable to an attacker. Encrypt the session data associated with the session ID. Use multifactor authentication.",
            "summary": "This attack targets the reuse of valid session ID to spoof the target system in order to gain privileges. The attacker tries to reuse a stolen session ID used previously during a transaction to perform spoofing and session hijacking. Another name for this type of attack is Session Replay."
        }
    ],
    "cvss": null,
    "cwe": "CWE-294",
    "id": "CVE-2023-23397",
    "impact": {},
    "last-modified": "2023-03-20T14:00:00",
    "references": [
        "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-23397"
    ],
    "summary": "Microsoft Outlook Elevation of Privilege Vulnerability",
    "vulnerable_configuration": [
        {
            "id": "cpe:2.3:a:microsoft:outlook:2016:*:*:*:*:*:*:*",
            "title": "cpe:2.3:a:microsoft:outlook:2016:*:*:*:*:*:*:*"
        },
        {
            "id": "cpe:2.3:a:microsoft:outlook:2013:sp1:*:*:*:*:*:*",
            "title": "cpe:2.3:a:microsoft:outlook:2013:sp1:*:*:*:*:*:*"
        },
        {
            "id": "cpe:2.3:a:microsoft:outlook:2013:sp1:*:*:rt:*:*:*",
            "title": "cpe:2.3:a:microsoft:outlook:2013:sp1:*:*:rt:*:*:*"
        },
        {
            "id": "cpe:2.3:a:microsoft:office:2019:*:*:*:*:*:*:*",
            "title": "cpe:2.3:a:microsoft:office:2019:*:*:*:*:*:*:*"
        },
        {
            "id": "cpe:2.3:a:microsoft:365_apps:-:*:*:*:enterprise:*:*:*",
            "title": "cpe:2.3:a:microsoft:365_apps:-:*:*:*:enterprise:*:*:*"
        },
        {
            "id": "cpe:2.3:a:microsoft:office:2021:*:*:*:ltsc:*:*:*",
            "title": "cpe:2.3:a:microsoft:office:2021:*:*:*:ltsc:*:*:*"
        }
    ],
    "vulnerable_configuration_cpe_2_2": [],
    "vulnerable_product": [
        "cpe:2.3:a:microsoft:outlook:2016:*:*:*:*:*:*:*",
        "cpe:2.3:a:microsoft:outlook:2013:sp1:*:*:*:*:*:*",
        "cpe:2.3:a:microsoft:outlook:2013:sp1:*:*:rt:*:*:*",
        "cpe:2.3:a:microsoft:office:2019:*:*:*:*:*:*:*",
        "cpe:2.3:a:microsoft:365_apps:-:*:*:*:enterprise:*:*:*",
        "cpe:2.3:a:microsoft:office:2021:*:*:*:ltsc:*:*:*"
    ]
}