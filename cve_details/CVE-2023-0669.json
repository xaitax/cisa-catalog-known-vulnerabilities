{
    "Modified": "2023-04-10T20:15:00",
    "Published": "2023-02-06T20:15:00",
    "access": {},
    "assigner": "cve@rapid7.com",
    "capec": [
        {
            "id": "586",
            "name": "Object Injection",
            "prerequisites": "The target application must unserialize data before validation.",
            "related_weakness": [
                "502"
            ],
            "solutions": "Implementation: Keep session state on the server, when possible.",
            "summary": "An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution."
        }
    ],
    "cvss": null,
    "cwe": "CWE-502",
    "id": "CVE-2023-0669",
    "impact": {},
    "last-modified": "2023-04-10T20:15:00",
    "references": [
        "https://my.goanywhere.com/webclient/ViewSecurityAdvisories.xhtml#zerodayfeb1",
        "https://infosec.exchange/@briankrebs/109795710941843934",
        "https://www.rapid7.com/blog/post/2023/02/03/exploitation-of-goanywhere-mft-zero-day-vulnerability/",
        "https://attackerkb.com/topics/mg883Nbeva/cve-2023-0669/rapid7-analysis",
        "https://github.com/rapid7/metasploit-framework/pull/17607",
        "https://duo.com/decipher/fortra-patches-actively-exploited-zero-day-in-goanywhere-mft",
        "https://frycos.github.io/vulns4free/2023/02/06/goanywhere-forgotten.html",
        "http://packetstormsecurity.com/files/171789/Goanywhere-Encryption-Helper-7.1.1-Remote-Code-Execution.html"
    ],
    "summary": "Fortra (formerly, HelpSystems) GoAnywhere MFT suffers from a pre-authentication command injection vulnerability in the License Response Servlet due to deserializing an arbitrary attacker-controlled object. This issue was patched in version 7.1.2.",
    "vulnerable_configuration": [
        {
            "id": "cpe:2.3:a:fortra:goanywhere_managed_file_transfer:*:*:*:*:*:*:*:*",
            "title": "cpe:2.3:a:fortra:goanywhere_managed_file_transfer:*:*:*:*:*:*:*:*"
        }
    ],
    "vulnerable_configuration_cpe_2_2": [],
    "vulnerable_product": [
        "cpe:2.3:a:fortra:goanywhere_managed_file_transfer:*:*:*:*:*:*:*:*"
    ]
}